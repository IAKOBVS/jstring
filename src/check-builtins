#!/usr/bin/perl

# Copyright (c) 2023 James Tirta Halim <tirtajames45 at gmail dot com>
# This file is part of the jstring library.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# MIT License (Expat)

use strict;
use warnings;

my @builtins;
my @filenames;
my @archs;

sub get_arch {
	my ($fname) = @_;
	$fname =~ /_glibc-(\w*)/;
	return $1;
}

while (glob('_glibc-*.h')) {
	my $fname = $_;
	open(my $FH, '<', $fname)
	  or die("Can't open $fname.\n");
	while (<$FH>) {
		if (/(__builtin\w*)/) {
			push(@builtins,  $1);
			push(@filenames, $fname);
			push(@archs,     uc(get_arch($fname)));
		}
	}
	close($FH) or die("Can't close $fname\n.");
}

my $fname = './jstr-macros.h';
my $file_str;
{
	local $/;
	open(my $FH, '<', $fname) or die("Can't open $fname.\n");
	$file_str = <$FH>;
	close($FH) or die("Can't close $fname.\n");
}

my $i = index($file_str, 'Check builtins');
die if ($i == -1);
my $j = index($file_str, "\n\n", $i);
if ($j != -1) {
	$file_str = substr($file_str, $i, $j);
} else {
	$file_str = substr($file_str, $i);
}

my @macro_blocks = split(/#(?:if|elif|else)/, $file_str);

for (my $i = 0; $i < scalar(@builtins); ++$i) {
	for (my $j = 0; $j < scalar(@macro_blocks); ++$j) {
		if (index($macro_blocks[$j], $archs[$i]) != -1) {
			if ($macro_blocks[$j] !~ /\W$builtins[$i]\W/) {
				die "$builtins[$i] from $filenames[$i] isn't checked for in $fname before defining JSTR_HAVE_WORD_AT_A_TIME.\n";
			}
		}
	}
}
