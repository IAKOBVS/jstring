#!/bin/sh
#shellcheck disable=SC2086,2068,2005,2028

verbose()
{
	$@
	echo "$*"
}

has_prog()
{
	type "$1" >/dev/null 2>/dev/null
}

update_if_needed()
{
	in_fname=$1
	out_fname=../jstr/$in_fname
	test -e "$out_fname" && test "$in_fname" -ot "$out_fname" && exit 0
	case $in_fname in
	*macro*.h) ;;
	_*.h)
		perl ./namespace-macros.pl "$in_fname" >"$out_fname"
		echo "perl ./namespace-macros.pl $in_fname >$out_fname"
		exit 0
		;;
	*jstr-*.h)
		perl ./gen-func.pl "$in_fname" | perl ./namespace-macros.pl >"$out_fname"
		echo "perl ./gen-func.pl $in_fname | perl ./namespace-macros.pl >$out_fname"
		exit 0
		;;
	*) ;;
	esac
	verbose cp -f "$in_fname" "$out_fname"
}

mark_as_built()
{
	echo "$(sed 's/\([ \t]*#[ \t]*ifndef[ \t]\{1,\}JSTR_BUILT\)/#define JSTR_BUILT\n\1/' ../jstr/jstr-macros.h)" >../jstr/jstr-macros.h
}

cd "$(dirname "$0")" || exit
./setup || exit
./test || exit
mkdir -p ../jstr

for file in $(echo *.h); do
	update_if_needed "$file" &
done
wait
mark_as_built

FLAGS='-Wall -Wextra -Wpedantic -Wsign-conversion -std=c99'
if has_prog tcc; then
	printf "#define JSTR_BUILT\n #include \"jstr.h\"\n int main(){return 0;}\n" | tcc -run - || exit
	echo 'printf #define JSTR_BUILT\n #include \"jstr.h\"\n int main(){return 0;}\n | tcc -run -'
else
	if [ -z "$TMPDIR" ]; then
		if [ -d /tmp ]; then
			TMPDIR=/tmp/$tmp
		else
			TMPDIR=$PWD/$tmp
		fi
	fi
	tmp="$TMPDIR"__$(echo "$PWD" | sed 's/\///g; s/\.//g')-
	verbose cc ../jstr/jstr.h $FLAGS -o "$tmp" || exit
	rm "$tmp"
fi
echo 'Built to jstr.'
